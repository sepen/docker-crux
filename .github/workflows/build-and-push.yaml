name: Build and push Multi-Architecture Docker Images for CRUX

on:
  push:
    branches:
      - main  # Trigger builds on push to the main branch (you can change this as needed)
  pull_request:
    branches:
      - main  # Trigger builds on PR to the main branch (you can change this as needed)

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner
    strategy:
      max-parallel: 3
      matrix:
        arch: [ amd64, arm64, armhf ]
        version: [ 3.7 ]
        include:
          - arch: amd64
            version: 2.6
            variant: [ core, setup ]
          - arch: amd64
            version: 3.7
            variant: [ core, setup, slim ]
          - arch: amd64
            version: 3.7-updated
            variant: [ core, setup, slim ]
          - arch: arm64
            version: 3.7
            variant: core
          - arch: armhf
            version: 3.7
            variant: core

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Disable sudo password prompt
        run: |
          echo "$USER ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/$USER

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for multi-platform builds
        with:
          use-new-buildx: true  # Use the latest version of Buildx

      - name: Set up Docker QEMU for ARM emulation
        uses: docker/setup-qemu-action@v2  # Set up QEMU to allow ARM emulation
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7  # Enable support for amd64, arm64, and armhf

      - name: Log in to DockerHub
        uses: docker/login-action@v2  # Log in to DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username (from GitHub Secrets)
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password/token (from GitHub Secrets)

      - name: Build Docker image
        run: |
          tag_suffix="${{ matrix.version }}-${{ matrix.arch }}-${{ matrix.variant }}"
          # Check if tag is a folder exists and not a symlink
          if [ -d "$tag_suffix" ] && [ ! -L "$tag_suffix" ]; then
            image_folder="${tag_suffix}"
            # Get extra tags from symlinks
            extra_tags=""
            find . -type l -exec basename {} \; | while read symlink; do
              target=$(readlink -f $symlink)
              target=$(basename $target)
              if [ "${target}" == "${tag_suffix}" ]; then
                extra_tags="${extra_tags} -t sepen/crux:${symlink}"
              fi
            done
            echo "Building and pushing Docker image: ${image_folder}"
            echo "... extra_tags: ${extra_tags}""
            # Create and use the buildx builder instance
            docker buildx create --use
            # Prepare required files
            bash prepare-files.sh $tag_suffix || exit 1
            # Determine the platform
            case "${{ matrix.arch }}" in
              "amd64") platform="linux/amd64" ;;
              "arm64") platform="linux/arm64" ;;
              "armhf") platform="linux/arm/v7" ;;
            esac
            echo "Platform ${platform} ..."
            # Build the image for selected platforms and push it
            docker buildx build \
              --platform ${platform} \
              -f ${image_folder}/Dockerfile \
              -t sepen/crux:${tag_suffix} \
              ${extra_tags} \
              --push ${image_folder}
          fi

      - name: Logout from DockerHub
        run: docker logout  # Log out from DockerHub to clean up authentication details
